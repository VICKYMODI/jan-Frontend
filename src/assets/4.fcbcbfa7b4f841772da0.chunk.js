webpackJsonp([4],{VDhQ:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n("WT6e"),a=n("b8Rh"),o=n("bfOx"),i=n("Xjw4"),s=n("7DMc"),c=n("z6At"),l=n("oM2X"),p=n("nhD7"),d=n("sPEV"),g=n("lgs7"),u=n("nhDP"),m=n("R4TA"),v=n("WqBc"),h=n("Sfd1"),f=this&&this.__decorate||function(t,e,n,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(a=t[s])&&(i=(o<3?a(i):o>3?a(e,n,i):a(e,n))||i);return o>3&&i&&Object.defineProperty(e,n,i),i},R=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},D=s.FormControlDirective.prototype.ngOnChanges;s.FormControlDirective.prototype.ngOnChanges=function(){return this.form.nativeElement=this.valueAccessor._elementRef.nativeElement,D.apply(this,arguments)};var b=s.FormControlName.prototype.ngOnChanges;s.FormControlName.prototype.ngOnChanges=function(){try{var t=b.apply(this,arguments);return this.control.nativeElement=this.valueAccessor._elementRef?this.valueAccessor._elementRef.nativeElement:this.valueAccessor.elem.nativeElement,t}catch(t){console.log(t)}};var P=function(){function t(t,e,n,r,a,o,i,s){this.router=t,this.route=e,this.commonService=n,this.stateService=r,this.loginService=a,this.manualReceiptService=o,this.commonRepository=i,this.modalService=s,this.allDateReport=!1,this.isstartDateChanged=!1,this.isendDateChanged=!1,this.date=new Date,this.minDate=new Date(this.date.getTime()-1728e5),this.maxDate=new Date,this.receiptDatesArray=[],this.bsConfig=Object.assign({},{containerClass:"theme-red",dateInputFormat:"YYYY-MM-DD HH:ss",minDate:this.minDate||this.bsConfig&&this.bsConfig.minDate,maxDate:this.maxDate||this.bsConfig&&this.bsConfig.maxDate}),this.bsConfigToday=Object.assign({},{containerClass:"theme-red",dateInputFormat:"YYYY-MM-DD HH:ss",minDate:this.maxDate,maxDate:this.maxDate}),this.bsConfigAllDate=Object.assign({},{containerClass:"theme-red",dateInputFormat:"YYYY-MM-DD HH:ss"}),this.csvPermission=!1,this.loginService.callApiToCheckLogin()}return t.prototype.ngOnInit=function(){if(this.commonService.clearAlertMessage(),this.commonService.checkLoginAndRedirect(m.b.EMPLOYE)){this.commonService.adjustTopScrollBar(),this.receiptReportPage=new s.FormGroup({startDate:new s.FormControl({value:""},[s.Validators.required,u.b]),endDate:new s.FormControl({value:""},[s.Validators.required,u.b])});var t=this.commonService.getLoginUserDetails();if(3==t.role&&(this.traineeAcoount=!0),t.permissions.length>0)for(var e=0;e<t.permissions.length;e++)if("CSV_REPORT_PERMISSION"==t.permissions[e].key){this.csvPermission=!0;break}if(t.permissions.length>0)for(e=0;e<t.permissions.length;e++)if("ALL_DATE_REPORT"==t.permissions[e].key){this.allDateReport=!0;break}}},t.prototype.ngAfterViewInit=function(){this.commonService.initializeScrollbar()},t.prototype.generateReportPdf=function(){var t=this;if(this.receiptReportPage.valid){v.GENERATE_AND_EXPORT_RECEIPT_REPORT,this.receiptReportPage.value.startDate,this.receiptReportPage.value.endDate,this.commonRepository.getToken();setTimeout(function(){},5e3),this.manualReceiptService.generateReportPdf(this.receiptReportPage.value).subscribe(function(e){if(console.log(e),"receipt_report.pdf"==e.filename){var n=v.GENERATE_AND_EXPORT_RECEIPT_REPORT+"/"+t.receiptReportPage.value.startDate+"/"+t.receiptReportPage.value.endDate+"/report_pdf?access_token="+t.commonRepository.getToken(),r=window.open(n);setTimeout(function(){r.document.title="Report"},5e3)}},function(e){406==e.status&&(t.loginService.logout(),setTimeout(function(){t.commonService.showErrorMessage("Session expired, Please login again to generate report.")},1e3)),(0==e.status||JSON.parse(e._body).error)&&(t.loginService.checkErrorResponse(e),t.commonService.showErrorMessage(JSON.parse(e._body).message))})}else if(!this.receiptReportPage.valid){var e=Object.keys(this.receiptReportPage.controls).map(function(e){return t.receiptReportPage.controls[e]}).filter(function(t){return t.invalid});if(e.length>0){var n=e[0].nativeElement;e[0].markAsTouched(),n?$(n).focus():(void 0==$("#dateReportRange").val()||$("#dateReportRange").val()&&0==$("#dateReportRange").val().trim().length)&&$("#dateReportRange").focus()}}},t.prototype.generateReportCsv=function(){var t=this;if(this.receiptReportPage.valid)this.manualReceiptService.generateReportCsv(this.receiptReportPage.value).subscribe(function(t){console.log(t);var e=window.URL.createObjectURL(t.data),n=document.createElement("a");document.body.appendChild(n),n.setAttribute("style","display: none"),n.href=e,n.download=t.filename,n.click(),n.remove()},function(e){406==e.status&&(t.loginService.logout(),setTimeout(function(){t.commonService.showErrorMessage("Session expired, Please login again to generate CSV report.")},1e3)),(0==e.status||JSON.parse(e._body).error)&&(t.loginService.checkErrorResponse(e),t.commonService.showErrorMessage(JSON.parse(e._body).message))});else if(!this.receiptReportPage.valid){var e=Object.keys(this.receiptReportPage.controls).map(function(e){return t.receiptReportPage.controls[e]}).filter(function(t){return t.invalid});if(e.length>0){var n=e[0].nativeElement;e[0].markAsTouched(),n?$(n).focus():(void 0==$("#dateReportRange").val()||$("#dateReportRange").val()&&0==$("#dateReportRange").val().trim().length)&&$("#dateReportRange").focus()}}},t.prototype.onCreatedDateRangeChanged=function(t){t&&2===t.length&&(this.receiptReportPage.controls.startDate.setValue(this.commonService.convertDateIntoString(new Date(t[0]),m.a.JAVA_DATE_FORMAT)),this.receiptReportPage.controls.endDate.setValue(this.commonService.convertDateIntoString(new Date(t[1]),m.a.JAVA_DATE_FORMAT)))},t.prototype.clearDatePicker=function(){this.receiptDatesArray=[],this.dateRangePicker.nativeElement.value="",this.receiptReportPage.controls.startDate.setValue(""),this.receiptReportPage.controls.endDate.setValue("")},f([Object(r.ViewChild)("dateRangePicker"),R("design:type",r.ElementRef)],t.prototype,"dateRangePicker",void 0),f([Object(r.Input)(),R("design:type",Date)],t.prototype,"minDate",void 0),f([Object(r.Input)(),R("design:type",Date)],t.prototype,"maxDate",void 0),t=f([Object(r.Component)({selector:"receiptReportPdf-content",template:n("YIdX")}),R("design:paramtypes",[o.b,o.a,c.a,l.a,p.a,d.a,g.a,h.a])],t)}(),y=[{path:"",component:P}],C=o.c.forChild(y),S=n("8nFs"),E=n("VWgf");n.d(e,"ReceiptReportPdfModule",function(){return O});var k=this&&this.__decorate||function(t,e,n,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(a=t[s])&&(i=(o<3?a(i):o>3?a(e,n,i):a(e,n))||i);return o>3&&i&&Object.defineProperty(e,n,i),i},O=function(){function t(){}return t=k([Object(r.NgModule)({imports:[i.CommonModule,s.FormsModule,s.ReactiveFormsModule,C,S.a,o.c,a.a.forRoot(),E.TextMaskModule],declarations:[P]})],t)}()},YIdX:function(t,e){t.exports='<block-ui [template]="blockTemplate"> </block-ui>\n<div class="panel with-nav-tabs panel-primary quote-main policy-main">\n   <div class="container">\n      <div class="row">\n         <div class="panel-body">\n            <div class="tab-content">\n               \x3c!-- /Start Tab start --\x3e\n               \x3c!-- <form [formGroup]="receiptReportPage" novalidate name="startForm" (ngSubmit)="next(receiptReportPage.value)">--\x3e\n               <div class="">\n                  <div class="col-sm-12">\n                     <alert-message></alert-message>\n                  </div>\n               </div>\n               \x3c!-- \t<input (blur)="resetDrityFlag()" > --\x3e\n               <form [formGroup]="receiptReportPage">\n                  <div class="tab-pane fade in active" id="tab1primary">\n                     <div class="form-group col-sm-12">\n                        <div class="well additional-information">\n                           <h3>Receipt Report</h3>\n                           <div class="policy-field-wapper receiptpage">\n                              <div class="row">\n                              \n                              \t<div class="col-xs-12 col-sm-6 form-group">\n                              \t\n                              \t\t<div\n\t                               \t\t[ngClass]="{ \'quote-has-error\' : receiptReportPage[\'controls\'][\'startDate\'].invalid && receiptReportPage[\'controls\'][\'startDate\'].touched }" \n\t                               \t\tcontainerClass="errorTooltip" \n\t                               \t\t[isDisabled]="!receiptReportPage.controls[\'startDate\'].touched || !receiptReportPage.controls[\'startDate\'].invalid" \n\t                               \t\ttooltip="{{ receiptReportPage.controls[\'startDate\'].errors ?\n\t                               \t\t\t(receiptReportPage.controls[\'startDate\'].errors?.required ? \'Dates are required.\' :\n\t                               \t\t\treceiptReportPage.controls[\'startDate\'].errors?.dateIsNotValid ? \'Dates are invalid.\' : \n\t                               \t\t\treceiptReportPage.controls[\'startDate\'].errors | json) : receiptReportPage.controls[\'startDate\'].errors | json }}">\n\n\t\t\t\t\t\t\t\t\t<div *ngIf = "traineeAcoount && !allDateReport">\n\t\t\t\t\t\t\t\t\t\t<input type="text" placeholder="Receipt report dates" \n\t\t                                 \t\tclass="form-control white-background" name="inputDate" id="dateReportRange"\n\t\t\t                               \t\t#dateRangePicker\n\t\t\t                               \t\treadonly="readonly" \n\t\t\t                               \t\tbsDaterangepicker \n\t\t\t                               \t\t[bsConfig]="bsConfigToday" \n\t\t\t                               \t\t[bsValue]="receiptDatesArray"\n\t\t\t                               \t\t(bsValueChange)="onCreatedDateRangeChanged($event)">\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t<div *ngIf = "!allDateReport && !traineeAcoount">\n\t\t\t\t\t\t\t\t\t\t<input type="text" placeholder="Receipt report dates" \n\t\t                                 \t\tclass="form-control white-background" name="inputDate" id="dateReportRange"\n\t\t\t                               \t\t#dateRangePicker\n\t\t\t                               \t\treadonly="readonly" \n\t\t\t                               \t\tbsDaterangepicker \n\t\t\t                               \t\t[bsConfig]="bsConfig" \n\t\t\t                               \t\t[bsValue]="receiptDatesArray"\n\t\t\t                               \t\t(bsValueChange)="onCreatedDateRangeChanged($event)">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div *ngIf = "allDateReport">\n\t\t\t\t\t\t\t\t\t\t<input type="text" placeholder="Receipt report dates" \n\t\t                                 \t\tclass="form-control white-background" name="inputDate" id="dateReportRange"\n\t\t\t                               \t\t#dateRangePicker\n\t\t\t                               \t\treadonly="readonly" \n\t\t\t                               \t\tbsDaterangepicker \n\t\t\t                               \t\t[bsConfig]="bsConfigAllDate" \n\t\t\t                               \t\t[bsValue]="receiptDatesArray"\n\t\t\t                               \t\t(bsValueChange)="onCreatedDateRangeChanged($event)">\n\t\t\t\t\t\t\t\t\t</div>\n\t                               \t\t\t\n                            \t\t</div>\n\t                               \t\t\n\t                               \t\t<i *ngIf="receiptReportPage[\'controls\'][\'startDate\'].value && receiptReportPage[\'controls\'][\'startDate\'].value.length > 0" class="fa fa-times fa-lg" (click)="clearDatePicker()"></i>\n\t                               \t\t<i *ngIf="!(receiptReportPage[\'controls\'][\'startDate\'].value && receiptReportPage[\'controls\'][\'startDate\'].value.length > 0)" class="fa fa-calendar fa-lg"></i>\n\t\t\t\t\t\t\t\t</div>\n                              <div class="col-xs-12 col-sm-6 text-center">\n                              \t\t<button type="button" class="btn btn-orange tab-btn1 genpdfbtn" (click)="generateReportPdf()" >Generate PDF Report</button>\n                                    <button *ngIf="csvPermission" type="button" class="btn btn-orange tab-btn1 genpdfbtn" (click)="generateReportCsv()" >Generate CSV Report</button>\n                              </div>\n                                    \n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </form>\n            </div>\n         </div>\n      </div>\n   </div>\n</div>'}});